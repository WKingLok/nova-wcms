name: Github actions for WCMS
on:
  push:
    branches: 
      - main
jobs:
  Test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-22.04-arm
            arch: arm64
    steps: 
        # Environment Setup
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v3
        
        - name: Setup the PHP environment
          uses: shivammathur/setup-php@v2
          with:
            php-version: '8.2'
            coverage: xdebug

        - name: Setup Node Environment
          uses: actions/setup-node@v4
          with:
            node-version: 22

        # - name: Cache node modules
        #   id: cache-npm
        #   uses: actions/cache@v3
        #   env:
        #     cache-name: cache-node-modules
        #   with:
        #     # npm cache files are stored in `~/.npm` on Linux/macOS
        #     path: ~/.npm
        #     key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        #     restore-keys: |
        #       ${{ runner.os }}-build-${{ env.cache-name }}-
        #       ${{ runner.os }}-build-
        #       ${{ runner.os }}-

        # App Build
        - name: Checkout code
          uses: actions/checkout@v4

        # - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        #   name: List the state of node modules
        #   continue-on-error: true
        #   run: npm list

        - name: NPM Actions
          run: npm install && npm run build
        
        - name: Composer Actions
          run: |
            if [[ ! -z "${{ secrets.COMPOSER_AUTH_NOVA_USERNAME }}" ]] && [[ ! -z "${{secrets.COMPOSER_AUTH_NOVA_PASSWORD}}" ]]; then
              composer config http-basic.nova.laravel.com "$COMPOSER_AUTH_NOVA_USERNAME" "$COMPOSER_AUTH_NOVA_PASSWORD"
            fi

        - name: Composer Install
          run: composer install
        
        # App Pack
        - name: build and push
          uses: docker/build-push-action@v6
          with: 
            push: false
            file: docker/DockerFile
            platforms: linux/arm64
            context: .
            tags: |
              ${{ vars.APP_DOCKER_IMAGE_NAME }}:latest
              ${{ vars.APP_DOCKER_IMAGE_NAME }}:${{ github.sha }}

